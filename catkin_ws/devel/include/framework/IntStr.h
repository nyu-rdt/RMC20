// Generated by gencpp from file framework/IntStr.msg
// DO NOT EDIT!


#ifndef FRAMEWORK_MESSAGE_INTSTR_H
#define FRAMEWORK_MESSAGE_INTSTR_H

#include <ros/service_traits.h>


#include <framework/IntStrRequest.h>
#include <framework/IntStrResponse.h>


namespace framework
{

struct IntStr
{

typedef IntStrRequest Request;
typedef IntStrResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct IntStr
} // namespace framework


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::framework::IntStr > {
  static const char* value()
  {
    return "e4e1a089454a32166064b947dbe98aff";
  }

  static const char* value(const ::framework::IntStr&) { return value(); }
};

template<>
struct DataType< ::framework::IntStr > {
  static const char* value()
  {
    return "framework/IntStr";
  }

  static const char* value(const ::framework::IntStr&) { return value(); }
};


// service_traits::MD5Sum< ::framework::IntStrRequest> should match 
// service_traits::MD5Sum< ::framework::IntStr > 
template<>
struct MD5Sum< ::framework::IntStrRequest>
{
  static const char* value()
  {
    return MD5Sum< ::framework::IntStr >::value();
  }
  static const char* value(const ::framework::IntStrRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::framework::IntStrRequest> should match 
// service_traits::DataType< ::framework::IntStr > 
template<>
struct DataType< ::framework::IntStrRequest>
{
  static const char* value()
  {
    return DataType< ::framework::IntStr >::value();
  }
  static const char* value(const ::framework::IntStrRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::framework::IntStrResponse> should match 
// service_traits::MD5Sum< ::framework::IntStr > 
template<>
struct MD5Sum< ::framework::IntStrResponse>
{
  static const char* value()
  {
    return MD5Sum< ::framework::IntStr >::value();
  }
  static const char* value(const ::framework::IntStrResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::framework::IntStrResponse> should match 
// service_traits::DataType< ::framework::IntStr > 
template<>
struct DataType< ::framework::IntStrResponse>
{
  static const char* value()
  {
    return DataType< ::framework::IntStr >::value();
  }
  static const char* value(const ::framework::IntStrResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FRAMEWORK_MESSAGE_INTSTR_H
